(function(){this.TransactionViewController=(function(){a.prototype.modes={gift:null,loyalty:null};a.prototype.current_mode=null;a.prototype.inversion_factor=-1;function a(c,d,b,e){if(c==null){c=0}if(d==null){d=0}this.current_mode=b;if(e==null){e=1}this.modes.gift=new Transaction("dollars",c);this.modes.loyalty=new Transaction("points",d,e);this.attach_elements();this.attach_events();this.update_view()}a.prototype.attach_elements=function(){this.$starting_balance=$("#current_bal .amount");this.$ending_balance=$("#new_bal .amount");this.$amount_entered=$("#amt");this.$confirm_button=$("#transaction-confirm-button");this.$gift_loyalty_switch=$("#gift_loyalty_switch");this.$keypad_buttons=$("#keypad td");this.$mode_labels=$(".mode p");this.$commit_button=$(".commit");this.$ending_balance_hidden=$("#new_transaction_amount");this.$account_type_hidden=$("#new_transaction_account_type");return this.$account_type_label=$("#gift_loyalty_switch span")};a.prototype.attach_events=function(){this.$keypad_buttons.fastClick((function(b){return function(c){var d;d=$(c.target).data("value");if(d!=="b"){b.modes[b.current_mode].append_digit(d)}else{b.modes[b.current_mode].backspace()}b.modes[b.current_mode].invert(b.inversion_factor);return b.update_view()}})(this));this.$mode_labels.fastClick((function(b){return function(c){return b.change_inversion($(c.target))}})(this));this.$gift_loyalty_switch.fastClick((function(b){return function(c){return b.toggle_account_type()}})(this));return this.$commit_button.fastClick((function(b){return function(c){if($(c.target).hasClass("actual")){return $("#new_transaction").submit()}}})(this))};a.prototype.toggle_account_type=function(){if(this.current_mode==="loyalty"){this.current_mode="gift"}else{this.current_mode="loyalty"}return this.update_view()};a.prototype.change_inversion=function(b){this.inversion_factor=(function(){switch(b.data("mode")){case"credit":this.$amount_entered.removeClass("deduct").addClass("credit");return 1;case"deduct":this.$amount_entered.removeClass("credit").addClass("deduct");return -1}}).call(this);this.modes[this.current_mode].invert(this.inversion_factor);this.$mode_labels.removeClass("selected");b.addClass("selected");return this.update_view()};a.prototype.update_view=function(){this.$starting_balance.text(this.modes[this.current_mode].to_string("starting_balance"));this.$ending_balance.text(this.modes[this.current_mode].to_string("ending_balance"));this.$commit_button.toggleClass("disabled",!this.amount_entered_valid());this.$amount_entered.text(_.str.sprintf("$%.2f",this.modes[this.current_mode].amount_entered));this.$account_type_label.text((function(){switch(this.current_mode){case"loyalty":return"gift";case"gift":return"loyalty"}}).call(this));return this.$account_type_hidden=this.current_mode};a.prototype.amount_entered_valid=function(){return this.modes[this.current_mode].amount_entered!==0};return a})();$(function(){var a,b,c,d;b=$('meta[name="transaction-starting-amount"]').attr("content")/100;c=$('meta[name="loyalty-starting-amount"]').attr("content")-0;a=$("#new_transaction_account_type").val();d=parseFloat($('meta[name="loyalty-multiplier"]').attr("content"));return new TransactionViewController(b,c,a,d)})}).call(this);